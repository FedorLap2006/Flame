const { MessageEmbed } = require('discord.js');
const FlameCommand = require('../../structures/FlameCommand');
const { getHelp } = require('../../utils/Functions');

class SuggestCommand extends FlameCommand {
  constructor() {
    super('suggest', {
      description: '–û—Ç–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è —Å–µ—Ä–≤–µ—Ä–∞.',
      category: 'general',
      usage: 'suggest <–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ>',
      aliases: [],
      cooldown: 3,
    });
  }

  async run(message, args) {
    const data = await message.client.database.collection('guilds').findOne({ guildID: message.guild.id });
    if (!data.ideaChannel) return message.fail('–ù–∞ –¥–∞–Ω–Ω–æ–º —Å–µ—Ä–≤–µ—Ä–µ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∫–∞–Ω–∞–ª –¥–ª—è –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –¥–ª—è —Ä–µ—à–µ–Ω–∏—è –¥–∞–Ω–Ω–æ–π –ø—Ä–æ–±–ª–µ–º—ã.');

    const user = await message.client.database.collection('guildusers').findOne({ guildID: message.guild.id, userID: message.author.id });
    if (user.idesBlacklist) return message.fail('–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—É—é –∫–æ–º–∞–Ω–¥—É, —Ç–∞–∫ –∫–∞–∫ –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ —á–µ—Ä–Ω–æ–º —Å–ø–∏—Å–∫–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π –¥–∞–Ω–Ω–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞.');

    const suggestion = args.join(' ');

    if (!suggestion) return getHelp(message, this.name);
    if (suggestion.length > 1850) return message.fail('–î–ª–∏–Ω–∞ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –Ω–µ –¥–æ–ª–∂–Ω–∞ –ø—Ä–µ–≤—ã—à–∞—Ç—å –ª–∏–º–∏—Ç –≤ **1850** —Å–∏–º–≤–æ–ª–æ–≤.');
    if (!message.guild.me.permissionsIn(data.ideaChannel).has('SEND_MESSAGES')) return message.fail('–£ –º–µ–Ω—è –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –æ—Ç–ø—Ä–∞–≤–∫—É —Å–æ–æ–±—â–µ–Ω–∏–π –≤ —Ç–µ–∫—É—â–∏–π –∫–∞–Ω–∞–ª –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ.');

    message.reply('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–≤–æ—é –∏–¥–µ—é? –î–∞–Ω–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –±—É–¥–µ—Ç –æ—Ç–º–µ–Ω–∏—Ç—å.').then((m) => {
      const collector = m.createReactionCollector((reaction, user) => user.id === message.author.id, { max: 1 });
      collector.on('collect', async (reaction) => {
        if (reaction.emoji.name == '‚úÖ') {
          const id = (data.ideas?.length ?? 0) + 1;

          const msg = await message.guild.channels.cache.get(data.ideaChannel).send(
            new MessageEmbed()
              .setTitle(`–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ #${id}`)
              .setColor('ffa500')
              .setFooter(message.guild.name, message.guild.iconURL())
              .setAuthor(message.author.tag, message.author.avatarURL({ dynamic: true }))
              .setDescription(suggestion)
              .setImage(message.attachments.first() ? message.attachments.first().proxyURL : null)
              .setTimestamp(),
          );
          ['üëç', 'üëé'].forEach((r) => msg.react(r));
          message.client.database.collection('guilds').updateOne({ guildID: message.guild.id }, {
            $push: {
              ideas: {
                id,
                message: msg.id,
              },
            },
          });

          return m.edit(`–í–∞—à–∞ –∏–¥–µ—è –±—ã–ª–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞. ID –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è: **${id}**`);
        } if (reaction.emoji.name == '‚ùé') {
          return m.edit('–û—Ç–º–µ–Ω–µ–Ω–æ.');
        }
      });
      ['‚úÖ', '‚ùé'].forEach((r) => m.react(r));
    });
  }
}

module.exports = SuggestCommand;
