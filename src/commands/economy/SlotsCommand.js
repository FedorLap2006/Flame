/* eslint-disable no-restricted-globals,radix */
const { MessageEmbed } = require('discord.js');
const { getHelp } = require('../../utils/Functions');
const FlameCommand = require('../../structures/FlameCommand');

class SlotsCommand extends FlameCommand {
  constructor() {
    super('slots', {
      description: '–ò—Å–ø—ã—Ç–∞—Ç—å —É–¥–∞—á—É –≤ —Å–ª–æ—Ç–∞—Ö.',
      category: 'economy',
      usage: 'slots <–°—Ç–∞–≤–∫–∞>',
      aliases: [],
      cooldown: 10,
    });
  }

  async run(message, args) {
    const guild = await message.client.database.collection('guilds').findOne({ guildID: message.guild.id });
    const data = await message.client.database.collection('guildusers').findOne({ guildID: message.guild.id, userID: message.author.id });
    let bet = args[0];

    if (!bet) return getHelp(message, this.name);
    if (isNaN(bet) || !parseInt(bet)) return message.reply('–£–∫–∞–∂–∏—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ **–≤–µ—Ä–Ω—É—é** —Å—Ç–∞–≤–∫—É :no_entry:');
    if (parseInt(bet) < 20 || parseInt(bet) > 100000) return message.reply('–°—Ç–∞–≤–∫–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –±–æ–ª—å—à–µ **20** –∏ –º–µ–Ω—å—à–µ **100,000** :no_entry:');
    if (data.money < parseInt(bet)) return message.reply('–°—É–º–º–∞ –¥–∞–Ω–Ω–æ–π —Å—Ç–∞–≤–∫–∏ –ø—Ä–µ–≤—ã—à–∞–µ—Ç —Å—É–º–º—É –≤–∞—à–∏—Ö –¥–µ–Ω–µ–≥ –Ω–∞ —Ä—É–∫–∞—Ö :no_entry:');

    let win = true;
    const slots = ['üçá', 'üçì', 'üçâ', 'üçé', 'üçè', 'üçä', 'üçç', 'üçã', 'üçí'];
    // eslint-disable-next-line max-len
    const fillSlots = (length) => Array(length).fill().map(() => slots[Math.floor(Math.random() * slots.length)]);
    const buildDescription = (values) => [
      '–ï—Å–ª–∏ –≤–∞–º –≤—ã–ø–∞–ª–æ –¥–≤–æ–µ –æ–¥–∏–Ω–∞–∫–æ–≤—ã—Ö —ç–º–æ–¥–∑–∏ - —Å—Ç–∞–≤–∫–∞ —É–¥–≤–∞–∏–≤–∞–µ—Ç—Å—è.',
      '–ï—Å–ª–∏ –∂–µ –≤—Å–µ —Å–ª–æ—Ç—ã –æ–¥–∏–Ω–∞–∫–æ–≤—ã–µ, —Å—Ç–∞–≤–∫–∞ —É–º–Ω–æ–∂–∞–µ—Ç—Å—è –Ω–∞ —Ç—Ä–∏.',
      `\n\`\`\`\n${values.join(' | ')}\n\`\`\``,
    ].join(' ');
    let values = fillSlots(3);

    const msg = await message.channel.send(
      new MessageEmbed()
        .setTitle('–°–ª–æ—Ç—ã')
        .setColor('ffa500')
        .setDescription(buildDescription(values))
        .setThumbnail(message.guild.iconURL({ dynamic: true, size: 2048 }))
        .setFooter(message.guild.name, message.guild.iconURL())
        .setTimestamp(),
    );
    // eslint-disable-next-line
    for (let i = 0; i < 3; i++) {
      values = fillSlots(3);
      // eslint-disable-next-line
      await msg.edit(msg?.embeds?.[0].setDescription(buildDescription(values)));
    }

    if (!values.find((a) => a !== values[0])) bet *= 4;
    // eslint-disable-next-line eqeqeq,max-len
    else if (values.findIndex((a, i) => values.findIndex((b, o) => b === a && i !== o) !== -1) !== -1) bet *= 2;
    else win = false;

    message.client.database.collection('guildusers').updateOne({ guildID: message.guild.id, userID: message.author.id }, {
      $inc: {
        money: win ? bet : -bet,
      },
    });
    message.reply(win ? `:tada: –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º, –≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ **${bet}**${guild.currency}.` : `–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤ —ç—Ç–æ—Ç —Ä–∞–∑ –≤—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏. –£ –≤–∞—Å –±—ã–ª–æ –æ—Ç–Ω—è—Ç–æ **${bet}**${guild.currency}.`);
  }
}

module.exports = SlotsCommand;
