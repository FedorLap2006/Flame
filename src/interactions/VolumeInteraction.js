const FlameInteraction = require('../structures/FlameInteraction');
const InteractionResponse = require('../utils/InteractionResponse');

class VolumeInteraction extends FlameInteraction {
  constructor() {
    super('volume');
  }

  run(client, interaction) {
    const callback = new InteractionResponse(client);

    if (!interaction.member.voice.channelID) {
      return callback.send(
        interaction,
        '–í—ã –¥–æ–ª–∂–Ω—ã –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ, –¥–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—É—é –∫–æ–º–∞–Ω–¥—É.',
        { flags: 64 },
      );
    }
    const dispatcher = client.queue.get(interaction.guild?.id);

    if (!dispatcher) {
      return callback.send(
        interaction,
        '–ù–∞ –¥–∞–Ω–Ω–æ–º —Å–µ—Ä–≤–µ—Ä–µ –Ω–µ –∑–∞–ø—É—â–µ–Ω –º—É–∑—ã–∫–∞–ª—å–Ω—ã–π –ø–ª–µ–µ—Ä.',
        { flags: 64 },
      );
    }
    if (
      dispatcher?.player.voiceConnection.voiceChannelID
      !== interaction.member.voice.channelID
    ) {
      return callback.send(
        interaction,
        '–í—ã –¥–æ–ª–∂–Ω—ã –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –æ–¥–Ω–æ–º –∫–∞–Ω–∞–ª–µ —Å–æ –º–Ω–æ–π, –¥–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã —É–ø—Ä–∞–≤–ª—è—Ç—å –ø–ª–µ–µ—Ä–æ–º.',
        { flags: 64 },
      );
    }

    const volume = interaction.options.value;
    if (!parseInt(volume) || parseInt(volume) < 1 || parseInt(volume) > 200) {
      return callback.send(
        interaction,
        '–ó–Ω–∞—á–µ–Ω–∏–µ –≥—Ä–æ–º–∫–æ—Å—Ç–∏ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –æ—Ç **1** –¥–æ **200%**.',
        { flags: 64 },
      );
    }

    dispatcher.player.setVolume(parseInt(volume));
    return callback.send(interaction, `üîä –ì—Ä–æ–º–∫–æ—Å—Ç—å –ø—Ä–æ–∏–≥—Ä—ã–≤–∞–Ω–∏—è –±—ã–ª–∞ —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –Ω–∞ **${parseInt(volume)}%**.`);
  }
}

module.exports = VolumeInteraction;
