const FlameInteraction = require('../structures/FlameInteraction');
const InteractionResponse = require('../utils/interactions/InteractionResponse');

class QueueInteraction extends FlameInteraction {
  constructor() {
    super('queue');
  }

  run(client, interaction) {
    const callback = new InteractionResponse(client);
    const dispatcher = client.queue.get(interaction.guild.id);

    if (!dispatcher) {
      return callback.send(
        interaction,
        '–ù–∞ –¥–∞–Ω–Ω–æ–º —Å–µ—Ä–≤–µ—Ä–µ –Ω–µ –∑–∞–ø—É—â–µ–Ω –º—É–∑—ã–∫–∞–ª—å–Ω—ã–π –ø–ª–µ–µ—Ä.',
        { flags: 64 },
      );
    }

    const array = [];
    array.push(`–°–µ–π—á–∞—Å –∏–≥—Ä–∞–µ—Ç: ${dispatcher.current.info.title} ${dispatcher.loop == 1 ? 'üîÅ' : ''}\n`);

    for (const track of dispatcher.queue) {
      array.push(track.info.title);
    }

    return callback.send(
      interaction,
      `\`\`\`fix\n${
        !array.length
          ? '–û—á–µ—Ä–µ–¥—å –¥–∞–Ω–Ω–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞ –ø—É—Å—Ç–∞.'
          : array.join('\n').slice(0, 1999)
      }\`\`\``,
    );
  }
}

module.exports = QueueInteraction;
